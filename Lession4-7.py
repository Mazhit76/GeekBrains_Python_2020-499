"""
7)	Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
При вызове функции должен создаваться объект-генератор.
Функция должна вызываться следующим образом: for el in fact(n).
 Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.

"""


# Фунция на входе получает зачение и в выдает его факториал на выходе в цикле его вычисления,
# конечное значение не сохраняется и не выдается

def generator_factorial(user_count, i=1):
    factorial = 1
    for i in range(1, user_count + 1):
        factorial *= i
        yield [i,factorial]
        #yield {i: factorial}


count = int(input('Введите число, для вычисления факториала: '))
i = 0  # Переменная которая нужна для получения переменной от которой на данный момент получаем факториал, здесь
# здесь может принимать любое значение
for el in generator_factorial(count,
                              i):  # Таким образом мы избавляемся от хранения в переменной данных последовательности
    print(f'{el[0]}! = {el[1]}')
    #print(f'{el.keys()}! = {str(el.values())}')